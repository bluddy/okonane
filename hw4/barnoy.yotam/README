Aritificial Intelligence HW 4: Decision Trees

Yotam Barnoy

Files:
------
_tags               - Used by the ocamlbuild system.
rungen.sh           - Runs the genetic algorithm
runent.sh           - Runs the entropy algorithm
compile.sh          - Compiles using the ocamlbuild system.
src/MainEnt.ml      - The main files of the program. Interprets command line parameters
src/MainGenetics.ml   and call the main algorithms and their tests.
src/Util.ml   			- Different utility functions that I've personally written. These copy some of Haskell's API functionality.
src/ChiSquare.ml    - Adapted from http://rosettacode.org/wiki/Verify_distribution_uniformity/Chi-squared_test#Python
									    I couldn't find an ocaml implementation of chi-square, so I translated a C one.
src/Data.ml 				- Functions that deal with reading the data and performing computations on it.
src/Entropy.ml      - The entropy-based algorithm.
src/Genetic.ml      - The genetic algorithm.
src/MyRandom.ml     - Functions that simplify carrying out random operations
src/Test.ml					- Functions that have to do with testing data. Used by the genetic algorithm as well.
src/Tree.ml					- Functions for dealing with/modifying trees, including a zipper which allows constant-time operations on functional data structures.
data/*						  - Data files modified by hand (really by Vim), as well as joining the test and train data if there was any.

To build: run compile.sh. This will invoke the ocamlbuild system.
To run: run rungen.sh or runent.sh

Both algorithms use k-fold testing, and therefore take one file as input. Of course, the genetic algorithm has many more parameters.
After doing k folds (by default, 10), the algorithms will present detailed statistics.



